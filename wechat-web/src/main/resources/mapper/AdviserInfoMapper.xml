<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.czyl.dao.AdviserInfoMapper">
    <resultMap id="baseMap" type="com.czyl.entity.AdviserInfo">
        <id column="ai_id" jdbcType="BIGINT" property="id"/>
        <result column="ai_name" jdbcType="VARCHAR" property="name"/>
        <result column="ai_phone" jdbcType="VARCHAR" property="phone"/>
        <result column="ai_mail" jdbcType="VARCHAR" property="mail"/>
        <result column="ai_password" jdbcType="VARCHAR" property="password"/>
        <result column="ai_type" jdbcType="INTEGER" property="type"/>
    </resultMap>
    <resultMap id="nopswdMap" type="com.czyl.entity.AdviserInfo">
        <id column="ai_id" jdbcType="BIGINT" property="id"/>
        <result column="ai_name" jdbcType="VARCHAR" property="name"/>
        <result column="ai_phone" jdbcType="VARCHAR" property="phone"/>
        <result column="ai_mail" jdbcType="VARCHAR" property="mail"/>
        <result column="ai_type" jdbcType="INTEGER" property="type"/>
    </resultMap>
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM t_adviser_info WHERE ai_id=#{id};
    </delete>
    <select id="getAllAdviser" resultMap="nopswdMap">
        SELECT ai_id,ai_name,ai_mail,ai_phone,ai_type FROM t_adviser_info;
    </select>
    <insert id="insertAdviserInfo" parameterType="com.czyl.entity.AdviserInfo">
        INSERT INTO t_adviser_info(ai_name, ai_phone, ai_mail, ai_password, ai_type) VALUES (#{name},#{phone},#{mail},#{password},#{type});
    </insert>
    <update id="updateAdviserInfo" parameterType="com.czyl.entity.AdviserInfo">
        UPDATE t_adviser_info SET ai_name=#{name}, ai_phone=#{phone}, ai_mail=#{mail}, ai_password=#{password}, ai_type=#{type} WHERE ai_id =#{id};
    </update>
    <update id="updateEmail">
        UPDATE t_adviser_info SET ai_mail=#{mail} WHERE ai_id=#{id};
    </update>
    <update id="updatePassword">
        UPDATE t_adviser_info set ai_password=#{password} WHERE ai_id=#{id};
    </update>
    <select id="adviserOrDevlpLogin" resultMap="baseMap">
        select * from t_adviser_info WHERE ai_phone=#{phone} AND ai_password=#{password};
    </select>
    <select id="getAllByType" resultMap="nopswdMap" parameterType="java.lang.Integer">
        SELECT ai_id,ai_name,ai_mail,ai_phone,ai_type FROM t_adviser_info WHERE ai_type=#{type};
    </select>
    <select id="getNameById" resultType="java.lang.String" parameterType="java.lang.Long">
        SELECT ai_name FROM t_adviser_info WHERE ai_id = #{id};
    </select>
    <select id="selectAdviserById" parameterType="java.lang.Long" resultMap="nopswdMap">
        SELECT ai_id,ai_name,ai_mail,ai_phone,ai_type FROM t_adviser_info WHERE ai_id=#{id};
    </select>
</mapper>